-- User accounts SQL examples
-- Create users table if not already exists:
CREATE TABLE IF NOT EXISTS users (userId integer, email varchar(255), password varchar(255));
-- Insert into users table:
INSERT INTO users (userId, email, password) VALUES (1, 'example@gmail.com', 'CsDFR23f@f');
INSERT INTO users (userId, email, password) VALUES (2, 'myemail@gmail.com', '%gegHY785');
INSERT INTO users (userId, email, password) VALUES (3, 'template@gmail.com', 'sdofSDFJ$%2');
INSERT INTO users (userId, email, password) VALUES (4, 'postgres@hotmail.com', 'DFpL$f356');
INSERT INTO users (userId, email, password) VALUES (5, 'name@yahoo.com', 'sdf#%Fsd46');
-- Delete a user:
DELETE FROM users WHERE userID = 2;
DELETE FROM users WHERE email = 'example@gmail.com';
-- Select all records in the user table:
SELECT * FROM users;
-- Select only records where userId > 3 (filtering):
SELECT * FROM users WHERE userId > 3;
-- Select only the email and password of records that have a hotmail email (filtering):
SELECT email, password FROM users WHERE email LIKE '%@hotmail.com';
-- Update all records to increase password complexity with a random number betweeen 1 and 100:
UPDATE users SET password = CONCAT(password, (SELECT floor(Random()*(100)+1)));
-- Delete users table
DROP TABLE users;

-- Join two tables example
--Create two tables:
CREATE TABLE table1 (id integer, firstname varchar(255));
CREATE TABLE table2 (id integer, lastname varchar(255));
-- Insert data into tables:
INSERT INTO table1 (id, firstname) VALUES (245, 'firstName');
INSERT INTO table1 (id, firstname) VALUES (5675, 'John');
INSERT INTO table2 (id, lastname) VALUES (245, 'lastName');
INSERT INTO table2 (id, lastname) VALUES (5675, 'Blake');
-- Display first and last names based on id
SELECT t1.firstname, t2.lastname FROM table1 t1 JOIN table2 t2 ON t1.id = t2.id;