This document is for manually testing User Interfaces (UI) in the Purdue Course Finder Project

Testing Account Signup:
    A. Identification and Classification
        Test Case: 101
        System: /signup
        Description: Creating an Account
        Severity: 1

        Sprint: 1 
        User Story: 3

    B. Instructions
        Upon loading the /signup page, there will be fields for an email address, password, 
        and confirming the password along with a button for signing up and a link for users
        if they already have an account. Enter the account info to create an account.
        The email address field must fit an appropriate email address format, of x@x.x.
        The password and password confirm fields must be equal to each other.
        The password must meet minimum password complexity requirements:
            - Minimum of 8 characters
            - Minimum of 1 uppercase and 1 lowercase character
            - Minimum of 1 number

    C. Expected result
        1. If the email is already in use, the password doesn't match the password confirm,
           or the password doesn't meet necessary complexity requirements, an error message is displayed.
        2. If successful, a green popup with a link to the login page should show up.
        


Testing Account Login:
    A. Identification and Classification
        Test Case: 201
        System: /login
        Description: Logging into an Account
        Severity: 1

        Sprint: 1
        User Story: 4

    B. Instructions
        Upon loading the /login page, there will be fields for an email address and password, along with a "Log In" button,
        a link that says "Forgot Password?", and a link that says "Create an Account" that leads to the /signup page.
        Enter an email address and password into the fields and click the "Log In" button.

    C. Expected result
        1. If either the email or password field is blank, it should say the fields cannot be empty.
        2. If the email/password is incorrect (it doesn't exist in the system), an error should be shown.
        3. If the email + password combination is correct, the user should be redirected to the home page and will be logged in.



Testing Account Deletion:
    A. Identification and Classification
        Test Case: 301
        System: /deleteacct
        Description: Deleting an Account
        Severity: 1
        
        Sprint: 1
        User Story: 7
        Task: 4
    
    B. Instructions
        1. Open the page
        2. Click the 'Go Back' Button
        3. Click the 'Delete Account' Button
        4. Click the 'X' on the popup
        5. Click the 'Confirm' button on the popup

    C. Expected result
        1. Observe a header at the top of the page displaying 'Purdue Course Finder' and a back button 
            to go back to the home page. Also see the current logged in user's email displayed.
        2. Confirm that button takes the user back to the home page (Return to the delete account page 
            to continue the tutorial)
        3. Confirm a popup appears asking if you are sure, and the action cannot be undone.
        4. The popup closes.
        5. Notice the email on the page vanishes as no one is currently logged in.



Testing Sidebar Component:
    A. Identification and Classification
        Test Case: 401
        System: sidebar on the homepage
        Description: selecting items on the sidebar
        Severity: 1

        Sprint: 2
        User Story: 2, 7

    B. Instructions
        1. The sidebar should, by default, display a list of buildings.
        2. Click the filter button and change the filter to "Course" and enter a subject abbreviation (e.g. CS, MA, EAPS)
        3. Click a course to view it's sections

    C. Expected result
        1. Without clicking anything, the sidebar should be populated with building names and shortcodes
        2. When the "Course" filter is clicked, entering a subject abbreviation  should display a list of
           courses in that subject. If an invalid subject abbreviation is entered, the sidebar should display a "No Results" text.
        3. When a course is clicked, sections displaying section info should be displayed. If there are no sections, the sidebar
            should display a "No Results" text.



Testing Sidebar Filtering:
    A. Identification and Classification
        Test Case: 501
        System: /       (home page)
        Description: Filtering Sidebar and Panes
        Severity: 2
        
        Sprint: 2
        User Story: 5
        Task: 5
    
    B. Instructions
        * Searching in the sidebar requires you to hit enter or click the magnifying glass *

        1. Open the page
        2. Click the 'Filter' button
        3. Click the Filter Popup's 'X' button
        4. Type a building name in the search bar, such as 'Pharmacy' or 'Brown' (not case-sensitive)
        5. Change the filter to Course, and type in a department, such as 'CS' or 'MA'
        6. Testing Sections (See Expected result)

    C. Expected result
        1. Confirm the sidebar appears on the left side of the page. By default, the current filter
            is 'Building' so buildings will appear in the sidebar.
        2. Confirm a popup appears with options 'Building' and 'Course'. Also confirm
            sort by 'Ascending' and 'Descending' options appear.
        3. Confirm the popup disappears.
        4. Confirm only the correct buildings display.
        5. Confirm courses for input department appear.
        6. (See Test Case 401 for clicking courses and showing sections)

    
    A. Identification and Classification
        Test Case: 502
        System: /       (home page)
        Description: Filtering sidebar for specific course number
        Severity: 3

        Sprint: 3
        User Story: 5

    B. Instructions
        1. Click the "Filter" button and change the filter to "Course"
        2. Exit the popup and type "CS 307" in the search bar and hit <Enter>
        3. Clear the search bar and type "CS 30700" and hit <Enter>

    C. Expected result
        1. The Filter popup appears and the "Course" radio button is selected after clicking on it
        2. The sidebar displays only one course, the one belonging to CS 30700 - Software Engineering I
        3. The sidebar should still only display one course, the one belonging to CS 30700 - Software Engineering I


    A. Identification and Classification
        Test Case: 503
        System: /       (home page)
        Description: Filtering sidebar for specific course level
        Severity: 3

        Sprint: 3
        User Story: 5

    B. Instructions
        1. Click the "Filter" button and change the filter to "Course"
        2. Exit the popup and type "CS 3" in the search bar and hit <Enter>
        3. Clear the search bar and type "EAPS 1" and hit <Enter>
        4. Clear the search bar and type "EAPS" and hit <Enter>

    C. Expected result
        1. The Filter popup appears and the "Course" radio button is selected after clicking on it
        2. All 300 level CS courses should be displayed in the sidebar. The course numbers should go from 30700 to 39700
        3. All 100 level EAPS courses should be displayed in the sidebar. The course numbers should go from 10000 to 19100
        4. All EAPS courses, regardless of level, should be displayed in the sidebar


    A. Identification and Classification
        Test Case: 504
        System: /       (home page)
        Description: Filtering sidebar for only favorite courses display in sidebar
        Severity: 3

        Sprint: 3
        User Story: 8

    B. Instructions
        1. Click the "Filter" button and change the filter to "Course"
        2. Exit the popup and type "CS 3" in the search bar and hit <Enter>
        3. Make sure none of the stars are currently checked, then hit the star for CS 30700
        4. Click the "Favorites Only" checkbox under the search bar
        5. Clear the search bar and type CS, make sure the "Favorites Only" checkbox is checked, then hit <Enter>
        6. Uncheck the star for CS 30700, then uncheck and recheck the "Favorites Only" checkbox

    C. Expected result
        1. The Filter popup appears and the "Course" radio button is selected after clicking on it
        2. All 300 level CS courses should be displayed in the sidebar. The course numbers should go from 30700 to 39700
        3. The star for CS 30700 should now be checked (it should be the only start checked)
        4. Once the sidebar refreshes, the only course in the sidebar should be CS 30700
        5. The search bar should be "CS" and the only course in the sidebar should be CS 30700
        6. The sidebar should display no courses and display the text "No Results"


    A. Identification and Classification
        Test Case: 505
        System: /       (home page)
        Description: Filtering sidebar for only favorite courses link to map
        Severity: 3

        Sprint: 3
        User Story: 8
    
    B. Instructions
        1. Click the "Filter" button and change the filter to "Course"
        2. Exit the popup and type "CS 180" in the search bar and hit <Enter>
        3. Click the CS 18000 course and observe the highlighted buildings on the map
        4. Click the star for CS 18000 - Laboratory - 10706, then check the "Favorites Only" checkbox

    C. Expected result
        1. The Filter popup appears and the "Course" radio button is selected after clicking on it
        2. CS 18000 should be the only course displayed in the sidebar
        3. 4 buildings should be highlighted: LWSN, HAAS, CL50, and WTHR
        4. Only 1 building should be highlighted: LWSN
       



Testing Homepage Map:
    A. Identification and Classification
        Test Case: 601
        System: map on the homepage (/)
        Description: interacting with the map
        Severity: 1

        Sprint: 2
        User Story: 1

    B. Instructions
        1. Open the homepage
        2. Use the buttons on the map to zoom in and out
        3. Drag the map to pan
        4. Use the scroll wheel on the mouse to zoom in and out (with the mouse cursor over the map)
        5. Click on the map
        6. Use the arrow keys on the keyboard to pan the map

    C. Expected result
        1. The map can be zoomed in and out up to the maximum and minimum zoom defined by the Google Maps API
        2. The map can be panned without restriction



Testing Map Buildings:
    A. Identification and Classification
        Test Case: 701
        System: /       (home page)
        Description: Building Outlines on Map
        Severity: 3
        
        Sprint: 2
        User Story: 4
        Task: 4
    
    B. Instructions
        1. Open the page
        2. Scroll around on the map

    C. Expected result
        1. Confirm the map appears
        2. Ensure at Purdue West Lafayette's campus, academic buildings have an accurate
            outline representing their building architecture.



Testing Map Building Labels:
    A. Identification and Classification
        Test Case: 801
        System: /       (home page)
        Description: Building Labels on Map
        Severity: 3
        
        Sprint: 2
        User Story: 6
        Task: 4
    
    B. Instructions
        1. Open the page and scroll around on the map

    C. Expected result
        1. Ensure at Purdue West Lafayette's campus, academic buildings have a label on outlined buildings
            that accurately represents that building's shortcode, ex. Wilmeth Active Learning Center -> WALC.


Testing Homepage Buttons:
    A. Identification and Classification
        Test Case: 1001
        System: /       (home page)
        Description: buttons on the homepage that appear depending on whether or not a user is currently signed in
        Severity: 3

        Sprint: 2
        User Story: 8
        Tasks: 3, 4
    
    B. Instructions
        1. Open the homepage while not logged in
        2. Click the "LOG IN" button in the top right corner of the page
        3. Log into an account and return to the home page
        4. Click on the "ACCOUNT SETTINGS" button in the top right corner of the page
        5. return to the home page
        6. Click on the "FAVORITES" button in the top right corner of the page
        7. return to the home page
        8. Click on the "MY SCHEDULE" button in the top right corner of the page
        9. return to the home page
        10. Click on the "SIGN OUT" button in the top right corner of the page

    C. Expected result
        1. When not logged in, the only button that appears in the top right corner of the homepage is the "LOG IN" button
        2. When logged in, the "SIGN OUT", "ACCOUNT SETTINGS", "FAVORITES", and "MY SCHEDULE" buttons appear in the top right corner of the homepage
        3. When logged in, the "LOG IN" button does not appear in the top right corner of the home page
        4. Clicking the "LOG IN" button leads to the /login page
        5. Clicking the "ACCOUNT SETTINGS" button leads to the /modifyAccount page
        6. Clicking the "FAVORITES" button leads to the /favorites page
        7. Clicking the "MY SCHEDULE" button leads to the /schedule page
        8. Clicking the "SIGN OUT" button signs the user our of their account and refreshes the homepage
        9. When logged in, the favoriting star buttons appear in the sidebar
        10. When not logged in, the favoriting star buttons do not appear in the sidebar



Testing Login Redirection:
    A. Identification and Classification
        Test Case: 1101
        System: /deleteacct
        Description: pages that require accounts redirect to /login when there is no account currently signed in
        Severity: 1

        Sprint: 2
        User Story: 8
        Tasks: 1, 2

    B. Instructions
        1. Log in to the app
        2. Navigate to the /deleteacct page (See that it loads as expected)
        3. Log out of the app
        4. Navigate to the /deleteacct page (See it redirect to /login)

    C. Expected result
        1. When logged in, the /deleteacct page loads and appears as expected
        2. When not logged in, the /deleteacct page redirects to the /login page

    A. Identification and Classification
        Test Case: 1102
        System: /modifyAccount
        Description: pages that require accounts redirect to /login when there is no account currently signed in
        Severity: 1

        Sprint: 2
        User Story: 8

    B. Instructions
        1. Log in to the app
        2. Navigate to the /modifyAccount page (See that it loads as expected)
        3. Log out of the app
        4. Navigate to the /modifyAccount page (See it redirect to /login)

    C. Expected result
        1. When logged in, the /modifyAccount page loads and appears as expected
        2. When not logged in, the /modifyAccount page redirects to the /login page

    A. Identification and Classification
        Test Case: 1103
        System: /schedule
        Description: pages that require accounts redirect to /login when there is no account currently signed in
        Severity: 1

        Sprint: 2
        User Story: 8

    B. Instructions
        1. Log in to the app
        2. Navigate to the /schedule page (See that it loads as expected)
        3. Log out of the app
        4. Navigate to the /schedule page (See it redirect to /login)

    C. Expected result
        1. When logged in, the /schedule page loads and appears as expected
        2. When not logged in, the /schedule page redirects to the /login page

    A. Identification and Classification
        Test Case: 1104
        System: /favorites
        Description: pages that require accounts redirect to /login when there is no account currently signed in
        Severity: 1

        Sprint: 2
        User Story: 8

    B. Instructions
        1. Log in to the app
        2. Navigate to the /favorites page (See that it loads as expected)
        3. Log out of the app
        4. Navigate to the /favorites page (See it redirect to /login)

    C. Expected result
        1. When logged in, the /favorites page loads and appears as expected
        2. When not logged in, the /favorites page redirects to the /login page



Testing Favoriting Star:
    A. Identification and Classification
        Test Case: 1201
        Systems: / (home page) sidebar favoriting "star"
        Description: A clickable star should be displayed in each item showing if it is currently favorited
        Severity: 2

    B. Instructions
        1. With a new account, click on the star for the first and second item in the list of buildings
        2. Refresh the page
        3. Click on the star again for the first item in the list of buildings
        4. Refresh the page
        5. Click the "Sign Out" button
        6. Log back in using the same account

    C. Expected result
        1. The stars for the first and second items in the list of buildings should be yellow, the rest of the start should be white
        2. After page refresh, the first two stars should still be yellow and the rest should still be white.
        3. The first item's star should no longer be yellow (after clicking it), the second item's star should still be yellow,
           and the rest of the items' stars should be white.
        4. After page refresh, the only star that should be yellow is the second item'same
        5. After signing out and logging back in, the second item's star in the list of buildings should still be yellow while the rest
           of the items' stars should still be white.



Testing Favoriting Page Functionality:
    A. Identification and Classification
        Test Case: 1301
        Systems: / (home page) sidebar favoriting "star", /favorites
        Description: The favorites page should show a list of favorites that match the yellow stars in the sidebar
        Severity: 2

    B. Instructions
        1. With a new account, click on the star for the first item in the list of buildings
        2. Change the filter to Course and enter "CS" in the search bar
        3. Click the star for the first item in the list of CS courses
        4. Click the first CS course item, displaying a list of sections in the course
        5. Click the star for the first item in the list of sections
        6. Go to the favorites page and view the favorites in the lists
        7. Click on the favorited item in the buildings list to remove it from favorites
        8. Go back to the home Page

    C. Expected result
        1. Only the first star should be yellow in the buildings list (after clicking on it)
        2. After filtering for CS courses, none of the stars should be yellow
        3. Only the first star should be yellow in the list of CS courses (after clicking on it)
        4. Clicking the first CS course should display a list of sections with none of the stars being yellow
        5. Only the first star should be yellow in the list of sections (after clicking on it)
        6. The favorites page should have the same items that were favorited each in their repective
           lists (each list should only have one item)
        7. After clicking the only item in the buildings list, the buildings list should be empty
        8. Going back to the home page, it should display a list of buildings, and the first item's star should no longer be yellow

Testing Map Routing:
    A. Identification and Classification
        Test Case: 1401
        System: / (homepage)
        Description: Show visual route between 2 buildings
        Severity: 1

        Sprint: 3
        User Story: 3

    B. Instructions
        1. Click on the Route Button in the top right of the map.
        2. Go through both drop downs and choose 2 buildings, such as Armstrong and Stone, then click the "Show Route" button.
        3. Click the "Hide Route" button in the top right of the map.
        4. Open the popup again and choose the travel type "Biking" and click "Show Route".
        5. Open the popup again and choose the travel type "Driving" and click "Show Route".

    C. Expected result
        1. A popup should appear that says "Routing" and should provide drop downs to choose a starting and ending location for
            you route. Additionally, it will have options for Walking, Biking, and Driving.
        2. The popup should disappear and a route will appear on the map between the two buildings.
        3. The route should disappear.
        4. You should see a new path using bike lanes to travel between the 2 buildings.
        5. You should see a new path using roads that travels between the 2 buildings.


Testing Sidebar Classrooms:
    A. Identification and Classification
        Test Case: 1501
        System: / (homepage)
        Description: Viewing Classrooms on the Sidebar
        Severity: 1

        Sprint: 3
        User Story: 6

    B. Instructions
        1. Click the filter button and choose classroom. Click the search bar on the top of the sidebar, and type in a
            building shortcode, such as WALC, and hit enter.
        2. Change the filter to building, and type another building's shortcode into the search bar, such as RHPH. Hit
            enter.

    C. Expected result
        1. You should see a list of rooms in the Wilmeth Active Learning Center.
        2. The sidebar should populate with classrooms from the Pharmacy building.


Testing Sidebar & Map Component Interactions:
    A. Identification and Classification
        Test Case: 1601
        System: / (home page) sidebar and map
        Description: Sidebar & Map component interactions
        Severity: 2

        Sprint: 2
        User Story: 10

    B. Instructions
        1. Navigate to the homepage of the application
        2. Click a building in the sidebar (e.g. WALC a.k.a Wilmeth Active Learning Center)

    C. Expected result
        1. By default, The sidebar should show a list of buildings and the map should be zoomed out on Purdue's campus
           with all the building outlines shown
        2. After clicking on a building in the sidebar, the map should zoom in to the building and the color of the building highlight 
           will change color. For example: If WALC is clicked in the sidebar, the map zooms to the location of the building and WALC's 
           highlight changes color
        3. When the search bar is queried (with or without any search input), the building's highlight color should change back to the 
           default yellow color.


    A. Identification and Classification
        Test Case: 1602
        System: / (home page) sidebar and map
        Description: Sidebar & Map component interactions
        Severity: 2

        Sprint: 3
        User Story: 9
        Task: 2

    B. Instructions
        1. Navigate to the homepage of the application
        2. Select the "Filter" button and set the filter to "Building"
        3. Select the search bar and enter part of a building name or shortcode
        4. Click on the magnifying glass icon to filter the building list

    C. Expected result
        1. By default, all of the academic buildings (buildings containing classes) on the Purdue WL campus should be 
           highlighted on the map.
        2. When filtering the building list on the sidebar, the map highlights should update to have only the results of the 
           filter be highlighted on the map (ex: only the Physics building is highlighted when searching "phys")


    A. Identification and Classification
        Test Case: 1603
        System: / (home page) sidebar and map
        Description: Sidebar & Map component interactions
        Severity: 2

        Sprint: 3
        User Story: 9
        Task: 3

    B. Instructions
        1. Navigate to the homepage of the application
        2. Select the "Filter" button and set the filter to "Course"
        3. Select the search bar and enter a subject code to bring up its classes (ex: "cs")
        4. Click on the magnifying glass icon to search for courses
        5. Select a course from the sidebar

    C. Expected result
        1. By default, all of the academic buildings (buildings containing classes) on the Purdue WL campus should be 
           highlighted on the map.
        2. When selecting a course from the sidebar, the map highlights should update to have only the buildings that  
            contain sections of that course be highlighted on the map (ex: When selecting CS 30700, only RHPH is highlighted.
            ex: When selecting CS 35400, only PHYS, WTHR, and HAAS are highlighted.)


    A. Identification and Classification
        Test Case: 1604
        System: / (home page) sidebar and map
        Description: Sidebar & Map component interactions
        Severity: 2

        Sprint: 3
        User Story: 9
        Task: 4

    B. Instructions
        1. Navigate to the homepage of the application
        2. Select the "Filter" button and set the filter to "Course"
        3. Select the search bar and enter a subject code to bring up its classes (ex: "cs")
        4. Click on the magnifying glass icon to search for courses
        5. Select a course from the sidebar
        6. Select a section from the sidebar

    C. Expected result
        1. By default, all of the academic buildings (buildings containing classes) on the Purdue WL campus should be 
           highlighted on the map.
        2. When selecting a course from the sidebar, the map highlights should update to have only the buildings that  
            contain sections of that course be highlighted on the map (ex: When selecting CS 35400, only PHYS, WTHR, 
            and HAAS are highlighted.)
        3. When selecting a section from the sidebar, the building containing that section should have its highlight change color, 
           and the map should pan and zoom to that building.


Testing Clickable Building Highlights:
    A. Identification and Classification
        Test Case: 1701
        System: / (home page)
        Description: Clickable Map Building Highlights
        Severity: 2

        Sprint: 3
        User Story: 1

    B. Instructions
        1. Navigate to the homepage of the application
        2. Click a building highlight on the map
        3. Click another building highlight on the map

    C. Expected result
        1. By default, all of the academic buildings (buildings containing classes) on the Purdue WL campus should be 
           highlighted on the map, and the sidebar should show a list of all highlighted buildings.
        2. When clicking on a building highlight on the map, the map will zoom into that building's location, and the 
           building's highlight will change color to indicate that it has been selected. The sidebar will also update 
           to show information about classrooms inside of that building.
        3. Clicking on another building on the map will cause the map and sidebar to update for that building just like
           it did in point C2 above. 

    
    A. Identification and Classification
        Test Case: 1702
        System: / (home page)
        Description: Clickable Map Building Highlights
        Severity: 2

        Sprint: 3
        User Story: 1

    B. Instructions
        1. Navigate to the homepage of the application
        2. Filter the map and sidebar by entering a search query into the sidebar's search bar (ex: 'ar')
        3. Click a building highlight on the map
        4. Click another building highlight on the map

    C. Expected result
        1. By default, all of the academic buildings (buildings containing classes) on the Purdue WL campus should be 
           highlighted on the map, and the sidebar should show a list of all highlighted buildings.
        2. When filtering using the search bar, the map and sidebar will update to only show buildings relevant to the query.
        3. When clicking on a building highlight on the map, the map will zoom into that building's location, and the 
           building's highlight will change color to indicate that it has been selected. The sidebar will also update 
           to show information about classrooms inside of that building.
        4. Clicking on another building on the map will cause the map and sidebar to update for that building just like
           it did in point C3 above. 

    
    A. Identification and Classification
        Test Case: 1703
        System: / (home page)
        Description: Clickable Map Building Highlights
        Severity: 2

        Sprint: 3
        User Story: 1

    B. Instructions
        1. Navigate to the homepage of the application
        2. Filter the map and sidebar by entering a search query into the sidebar's search bar (ex: 'ar')
        3. Click a building highlight on the map
        4. Reset the building selection by clicking the search icon again
        5. Click the same building highlight on the map
        6. Repeat Steps 1-4
        7. Click another building highlight on the map

    C. Expected result
        1. By default, all of the academic buildings (buildings containing classes) on the Purdue WL campus should be 
           highlighted on the map, and the sidebar should show a list of all highlighted buildings.
        2. When filtering using the search bar, the map and sidebar will update to only show buildings relevant to the query.
        3. When clicking on a building highlight on the map, the map will zoom into that building's location, and the 
           building's highlight will change color to indicate that it has been selected. The sidebar will also update 
           to show information about classrooms inside of that building.
        4. Clicking the search icon in the sidebar will deselect the building, causing the highlight color to revert to yellow
           and the sidebar to show buildings relevant to the query again
        5. Clicking on a building on the map will cause the map and sidebar to update for that building just like
           it did in point C3 above. 


Testing the Schedule Page:
    A. Identification and Classification
        Test Case: 1801
        System: /Schedule
        Description: Normal schedule page showing section meetings
        Severity: 2

        Sprint: 3
        User Story: 2, 10

    B. Instructions
        1. When logged in, filter the sidebar until you get to the sections of a course.
        2. Click on the favoriting stars for a few sections
        3. Click the "Schedule" button on the home page
        4. Click the "x" button when hovering over a schedule event
        5. Click the only button in the "Hidden Events" section at the top of the screen
        6. Click on a schedule event
    
    C. Expected result
        1. After filtering, you should see a list of sections in the sidebar
        2. After favoriting a few sections, those stars should be yellow
        3. Clicking the "Schedule" button will lead to the schedule page with the section meetings
           displayed as events on the schedule
        4. Hovering an event should make it move upwards and make an "x" button appear. Clicking the
           "x" button hides the event from the schedule and adds it to the "hidden Events" section
           at the top of the screen
        5. Clicking the hidden event will remove it from the "Hidden Events" section and the event will
           now once again be displayed on the schedule
        6. Clicking on a schedule event opens a popup that displays detailed information about the section and class


    A. Identification and Classification
        Test Case: 1802
        System: /Schedule?sch_type=<Course/Section/Classroom>&sch_id=<id>
        Description: Course/Section/Classroom schedule page showing section meetings
        Severity: 2

        Sprint: 3
        User Story: 10

    B. Instructions
        1. In the sidebar, filter for a list of courses/sections/meetings
        2. Click the "View [] Schedule" button for the corresponding item
        3. View the Course/section/classroom meetings schedule

    C. Expected result
        1. After filtering, you should see a list of courses, sections, or classrooms in the sidebar
        2. Clicking the button leads to the corresponding schedule page
        3. If the item is a Course, all meetings of the course are displayed.
           If the item is a Section, all meetings of only that section are displayed.
           If the item is a Classroom, all meetings that occur in that classroom are displayed.


Testing Suggestions Page:
    A. Identification and Classification
        Test Case: 1901
        System: /suggestions
        Description: Suggestions Page when not logged in
        Severity: 3

        Sprint: 3
        User Story: 4

    B. Instructions
        1. Ensure you are not logged into the application (Users should be signed out on initial load, if you are signed in click the "SIGN OUT" button on the homepage)
        2. Navigate to the Suggestions Page (/suggestions, there should be a button in the lower right of the homepage with a lightbulb icon that links to this page)
        3. Type notes in the textbox
        4. Click Submit
        5. Click the "Home" link on the "Suggestion Submitted" popup

    C. Expected result
        1. The Suggestions Page should appear with a textbox in the center that is marked "Type Here...". A description above this
           textbox says "Submit notes about the app or suggestions for future features here."
        2. When clicking "Submit", the Suggestion is sent to the backend of the app where it is saved, A green popup appears to 
           show the user that the Suggestion was successfully submitted.
        3. Clicking "Home" on the success popup should return the user to the application's homepage.

    
    A. Identification and Classification
        Test Case: 1902
        System: /suggestions
        Description: Suggestions Page when logged in
        Severity: 3

        Sprint: 3
        User Story: 4

    B. Instructions
        1. Ensure you are logged into the application (Users should be signed out on initial load, if you are signed out click the "LOG IN" button on the homepage to sign into an account)
        2. Navigate to the Suggestions Page (/suggestions, there should be a button in the lower right of the homepage with a lightbulb icon that links to this page)
        3. Type notes in the textbox
        4. Click Submit
        5. Click the "Home" link on the "Suggestion Submitted" popup

    C. Expected result
        1. The Suggestions Page should appear with a textbox in the center that is marked "Type Here...". A description above this
           textbox says "Submit notes about the app or suggestions for future features here."
        2. When clicking "Submit", the Suggestion is sent to the backend of the app where the suggestion and the email of the user
           that sent the suggestion are saved, A green popup appears to show the user that their suggestion was successfully submitted.
        3. Clicking "Home" on the success popup should return the user to the application's homepage.


    A. Identification and Classification
        Test Case: 1903
        System: /suggestions
        Description: Submit an empty suggestion
        Severity: 3

        Sprint: 3
        User Story: 4

    B. Instructions
        1. Navigate to the Suggestions Page (/suggestions, there should be a button in the lower right of the homepage with a lightbulb icon that links to this page)
        2. Leave the textbox empty
        3. Click Submit
        4. Type notes in the textbox
        5. Click Submit
        6. Click the "Home" link on the "Suggestion Submitted" popup

    C. Expected result
        1. The Suggestions Page should appear with a textbox in the center that is marked "Type Here...". A description above this
           textbox says "Submit notes about the app or suggestions for future features here."
        2. If the textbox is empty when "Submit" is clicked, a red error box will appear telling the user "Error: Can't submit 
           empty suggestion."
        3. When clicking "Submit" when the textbox is not empty, the Suggestion is sent to the backend of the app where it is saved, 
           A green popup appears to show the user that the Suggestion was successfully submitted.
        3. Clicking "Home" on the success popup should return the user to the application's homepage.

